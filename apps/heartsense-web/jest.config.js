module.exports = {
  testPathIgnorePatterns: ['<rootDir>/.next/', '<rootDir>/node_modules/'],
  globalSetup: '<rootDir>/jest/jest.setup.ts',
  setupFilesAfterEnv: ['<rootDir>/jest/jest.setupAfterEnv.tsx'],
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
  transform: {
    '^(?!.*\\.(js|jsx|ts|tsx|css|json)$)': '@nx/react/plugins/jest',
    '^.+\\.[tj]sx?$': ['babel-jest', { presets: ['@nx/react/babel'] }],
  },
  moduleNameMapper: {
    '\\.(css|less)$': '<rootDir>/jest/styleConfig.ts',
    '@/app/(.*)$': '<rootDir>/app/$1',
    '@/components/(.*)$': '<rootDir>/components/$1',
    '@/hooks/(.*)$': '<rootDir>/hooks/$1',
    '@/service/(.*)$': '<rootDir>/service/$1',
    '@/store/(.*)$': '<rootDir>/store/$1',
    '@/helpers/(.*)$': '<rootDir>/helpers/$1',
    '@/lib/(.*)$': '<rootDir>/lib/$1',
    '@/styles/(.*)$': '<rootDir>/styles/$1',
    '@/artifacts/(.*)$': '<rootDir>/artifacts/$1',
    '@/types/(.*)$': '<rootDir>/types/$1',
    '@/public/(.*)$': '<rootDir>/public/$1',
    '@/__mocks__': '<rootDir>/__mocks__/$1',
    '@/test-utils': '<rootDir>/test-utils',
  },
  transformIgnorePatterns: ['/node_modules/(?!(axios)/)'],
  coverageReporters: ['json', 'lcov', 'text', 'clover', 'cobertura'],
  collectCoverageFrom: [
    '<rootDir>/middleware.ts',
    'app/**/*.{ts,tsx}',
    'components/**/*.{ts,tsx}',
    'hooks/**/*.{ts,tsx}',
    'service/**/*.{ts,tsx}',
    'store/**/*.{ts,tsx}',
    'helpers/**/*.{ts,tsx}',
    'styles/**/*.{ts,tsx}',
    '!store/rootReducer.ts',
    '!app/layout.tsx',
    '!app/**/layout.tsx',
    '!__mocks__/**/*.{ts,tsx}',
    '!artifacts/**/*.{ts,tsx}',
    '!lib/**/*.{ts,tsx}',
    '!types/**/*.{ts,tsx}',
    '!<rootDir>/node_modules/',
    '!styles/theme/custom.d.ts',
    '!styles/theme/MarkdownComponents.tsx',
  ],
  coverageDirectory: '../../coverage/apps/heartsense-web',
  coverageThreshold: {
    global: {
      branches: 90,
      functions: 90,
      lines: 90,
    },
  },
}
